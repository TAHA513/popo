import { useState, useEffect } from 'react';
import { Download } from 'lucide-react';

interface BeforeInstallPromptEvent extends Event {
  prompt(): Promise<void>;
  userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>;
}

export function PWAInstall() {
  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);
  const [isInstallable, setIsInstallable] = useState(false);

  useEffect(() => {
    const handleBeforeInstallPrompt = (e: Event) => {
      console.log('PWA: beforeinstallprompt event fired');
      // ููุน ุธููุฑ ุงููุงูุฐุฉ ุงูุชููุงุฆูุฉ
      e.preventDefault();
      // ุงุญูุธ ุงูุญุฏุซ ููุงุณุชุฎุฏุงู ูุงุญูุงู
      setDeferredPrompt(e as BeforeInstallPromptEvent);
      setIsInstallable(true);
    };

    const handleAppInstalled = () => {
      console.log('PWA: ุชู ุชุซุจูุช ุงูุชุทุจูู');
      setDeferredPrompt(null);
      setIsInstallable(false);
    };

    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
    window.addEventListener('appinstalled', handleAppInstalled);

    // ุชุญูู ูู ุญุงูุฉ ุงูุชุซุจูุช ุงูุญุงููุฉ
    if (window.matchMedia('(display-mode: standalone)').matches) {
      console.log('PWA: App is already installed');
      setIsInstallable(false);
    } else {
      console.log('PWA: App is not installed, waiting for beforeinstallprompt');
    }

    // ุชุญูู ูุชูุฏู ูู PWA readiness
    const checkPWAReadiness = async () => {
      console.log('PWA: ุงูุชุญูู ูู ุฌุงูุฒูุฉ PWA...');
      
      // ุชุญูู ูู service worker
      const hasServiceWorker = 'serviceWorker' in navigator;
      console.log('PWA: Service Worker ุฏุนู:', hasServiceWorker);
      
      // ุชุญูู ูู manifest
      const hasManifest = document.querySelector('link[rel="manifest"]');
      console.log('PWA: Manifest ููุฌูุฏ:', !!hasManifest);
      
      // ุชุญูู ูู ุนุฏู ุงูุชุซุจูุช ุงููุณุจู
      const isStandalone = window.matchMedia('(display-mode: standalone)').matches;
      console.log('PWA: ูุซุจุช ูุณุจูุงู:', isStandalone);
      
      // ุฅุฐุง ูู ููู ูุซุจุชุงูุ ุฃุธูุฑ ุงูุฒุฑ
      if (!isStandalone && hasServiceWorker && hasManifest) {
        console.log('PWA: ุงูุชุทุจูู ูุงุจู ููุชุซุจูุชุ ุนุฑุถ ุงูุฒุฑ');
        setIsInstallable(true);
      }
    };

    setTimeout(checkPWAReadiness, 1000);

    return () => {
      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
      window.removeEventListener('appinstalled', handleAppInstalled);
    };
  }, [deferredPrompt]);

  const handleInstallClick = async () => {
    // ุฃููุงู ุญุงูู ุงูุชุซุจูุช ุงูุชููุงุฆู
    if (deferredPrompt) {
      try {
        await deferredPrompt.prompt();
        const { outcome } = await deferredPrompt.userChoice;
        if (outcome === 'accepted') {
          alert('โ ุชู ุงูุชุซุจูุช!');
          setDeferredPrompt(null);
          setIsInstallable(false);
          return;
        }
      } catch (error) {
        console.log('ูุดู ุงูุชุซุจูุช ุงูุชููุงุฆูุ ูุญุงููุฉ ุงูุทุฑููุฉ ุงููุฏููุฉ');
      }
    }
    
    // ุฅุฐุง ูู ููุฌุญ ุงูุชุซุจูุช ุงูุชููุงุฆูุ ุฃุธูุฑ ุงูุชุนูููุงุช
    showSimpleInstructions();
  };

  const showSimpleInstructions = () => {
    const userAgent = navigator.userAgent;
    const isAndroid = /Android/i.test(userAgent);
    const isIOS = /iPad|iPhone|iPod/i.test(userAgent);
    const isChrome = /Chrome/i.test(userAgent);
    const isSafari = /Safari/i.test(userAgent) && !isChrome;
    
    let message = '';
    
    if (isIOS && isSafari) {
      message = '๐ฑ iPhone/iPad:\n\n1. ุงุถุบุท ุนูู ุฒุฑ ุงููุดุงุฑูุฉ โฌ๏ธ (ุฃุณูู ุงูุดุงุดุฉ)\n2. ุงุฎุชุฑ "ุฅุถุงูุฉ ุฅูู ุงูุดุงุดุฉ ุงูุฑุฆูุณูุฉ" \n3. ุงุถุบุท "ุฅุถุงูุฉ"\n\nโ ุณุชุฌุฏ ุฃููููุฉ ุงูุชุทุจูู ุนูู ุดุงุดุชู ุงูุฑุฆูุณูุฉ!';
    } else if (isAndroid && isChrome) {
      message = '๐ฑ Android:\n\n1. ุงุถุบุท ุนูู ุงูููุงุท ุงูุซูุงุซ โฎ (ุฃุนูู ูููู ุงููุชุตูุญ)\n2. ุงุฎุชุฑ "ุชุซุจูุช ุงูุชุทุจูู" ุฃู "ุฅุถุงูุฉ ุฅูู ุงูุดุงุดุฉ ุงูุฑุฆูุณูุฉ"\n3. ุงุถุบุท "ุชุซุจูุช"\n\nโ ุณุชุฌุฏ ุงูุชุทุจูู ูุซุจุชุงู ุนูู ูุงุชูู!';
    } else if (isChrome) {
      message = '๐ป ุงูููุจููุชุฑ:\n\n1. ุงุจุญุซ ุนู ุฃููููุฉ ุงูุชุซุจูุช โฌ๏ธ ูู ุดุฑูุท ุงูุนููุงู\n2. ุงุถุบุท ุนูููุง\n3. ุงุฎุชุฑ "ุชุซุจูุช"\n\nุฃู ูู ุงููุงุฆูุฉ โฎ ุงุฎุชุฑ "ุชุซุจูุช LaaBoBo"\n\nโ ุณูุตุจุญ ุงูุชุทุจูู ูุชุงุญุงู ูุจุฑูุงูุฌ ูููุตู!';
    } else {
      message = '๐ ููุญุตูู ุนูู ุฃูุถู ุชุฌุฑุจุฉ ุชุซุจูุช:\n\nุงูุชุญ ุงูุชุทุจูู ูู ูุชุตูุญ Chrome ุซู ุงุถุบุท ุนูู ุฒุฑ "ุชุซุจูุช ุงูุขู" ูุฑุฉ ุฃุฎุฑู';
    }
    
    alert(message);
  };

  // ุฃุธูุฑ ุงูุฒุฑ ุฏุงุฆูุงู ููุงุฎุชุจุงุฑ - ูููู ุฅุฒุงูุฉ ูุฐุง ุงูุชุนููู ูุงุญูุงู
  // if (!isInstallable) {
  //   return null;
  // }

  return (
    <button
      onClick={handleInstallClick}
      className="relative flex items-center gap-2 px-4 py-3 bg-white/20 hover:bg-white/30 backdrop-blur-sm text-white rounded-xl transition-all duration-200 border border-white/30 hover:border-white/50 shadow-xl hover:shadow-2xl transform hover:scale-105 active:scale-95"
      title={isInstallable ? "ุชุซุจูุช ุงูุชุทุจูู ูุฌุงูุงู" : "ุชุนูููุงุช ุงูุชุซุจูุช"}
    >
      <Download className="w-6 h-6" />
      <div className="text-right">
        <div className="text-sm font-bold leading-tight">ุชุซุจูุช ูุจุงุดุฑ</div>
        <div className="text-xs opacity-90 leading-tight">ุถุบุทุฉ ูุงุญุฏุฉ</div>
      </div>
      {isInstallable && (
        <div className="absolute -top-1 -right-1 w-4 h-4 bg-green-400 rounded-full animate-bounce flex items-center justify-center">
          <div className="w-2 h-2 bg-white rounded-full"></div>
        </div>
      )}
    </button>
  );
}