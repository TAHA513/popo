import { useState, useEffect } from 'react';
import { Download } from 'lucide-react';

interface BeforeInstallPromptEvent extends Event {
  prompt(): Promise<void>;
  userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>;
}

export function PWAInstall() {
  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);
  const [isInstallable, setIsInstallable] = useState(false);

  useEffect(() => {
    const handleBeforeInstallPrompt = (e: Event) => {
      console.log('PWA: beforeinstallprompt event fired');
      // ููุน ุธููุฑ ุงููุงูุฐุฉ ุงูุชููุงุฆูุฉ
      e.preventDefault();
      // ุงุญูุธ ุงูุญุฏุซ ููุงุณุชุฎุฏุงู ูุงุญูุงู
      setDeferredPrompt(e as BeforeInstallPromptEvent);
      setIsInstallable(true);
    };

    const handleAppInstalled = () => {
      console.log('PWA: ุชู ุชุซุจูุช ุงูุชุทุจูู');
      setDeferredPrompt(null);
      setIsInstallable(false);
    };

    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
    window.addEventListener('appinstalled', handleAppInstalled);

    // ุชุญูู ูู ุญุงูุฉ ุงูุชุซุจูุช ุงูุญุงููุฉ
    if (window.matchMedia('(display-mode: standalone)').matches) {
      console.log('PWA: App is already installed');
      setIsInstallable(false);
    } else {
      console.log('PWA: App is not installed, waiting for beforeinstallprompt');
    }

    // ุชุญูู ูุชูุฏู ูู PWA readiness
    const checkPWAReadiness = async () => {
      console.log('PWA: ุงูุชุญูู ูู ุฌุงูุฒูุฉ PWA...');
      
      // ุชุญูู ูู service worker
      const hasServiceWorker = 'serviceWorker' in navigator;
      console.log('PWA: Service Worker ุฏุนู:', hasServiceWorker);
      
      // ุชุญูู ูู manifest
      const hasManifest = document.querySelector('link[rel="manifest"]');
      console.log('PWA: Manifest ููุฌูุฏ:', !!hasManifest);
      
      // ุชุญูู ูู ุนุฏู ุงูุชุซุจูุช ุงููุณุจู
      const isStandalone = window.matchMedia('(display-mode: standalone)').matches;
      console.log('PWA: ูุซุจุช ูุณุจูุงู:', isStandalone);
      
      // ุฅุฐุง ูู ููู ูุซุจุชุงูุ ุฃุธูุฑ ุงูุฒุฑ
      if (!isStandalone && hasServiceWorker && hasManifest) {
        console.log('PWA: ุงูุชุทุจูู ูุงุจู ููุชุซุจูุชุ ุนุฑุถ ุงูุฒุฑ');
        setIsInstallable(true);
      }
    };

    // ุชุญูู ูุชูุฑุฑ ูุถูุงู ุงูุชุดุงู ุญุงูุฉ PWA
    setTimeout(checkPWAReadiness, 1000);
    setTimeout(checkPWAReadiness, 3000);
    
    // ุฅุฐุง ูู ูุชู ุงุณุชูุงู beforeinstallprompt ุจุนุฏ 5 ุซูุงูุ ุฃุธูุฑ ุงูุฒุฑ ูููุณุงุนุฏุฉ ุงููุฏููุฉ
    setTimeout(() => {
      if (!deferredPrompt && !window.matchMedia('(display-mode: standalone)').matches) {
        console.log('PWA: ูู ูุชู ุงุณุชูุงู beforeinstallpromptุ ุนุฑุถ ุฒุฑ ุงููุณุงุนุฏุฉ');
        setIsInstallable(true);
      }
    }, 5000);

    return () => {
      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
      window.removeEventListener('appinstalled', handleAppInstalled);
    };
  }, [deferredPrompt]);

  const handleInstallClick = async () => {
    console.log('PWA: ุจุฏุก ุนูููุฉ ุงูุชุซุจูุช...');
    
    // ูุญุงููุฉ ุงูุชุซุจูุช ุงูุชููุงุฆู ุฃููุงู
    if (deferredPrompt) {
      try {
        console.log('PWA: ูุญุงููุฉ ุงูุชุซุจูุช ุงูุชููุงุฆู...');
        await deferredPrompt.prompt();
        const { outcome } = await deferredPrompt.userChoice;
        
        if (outcome === 'accepted') {
          console.log('PWA: ุชู ูุจูู ุงูุชุซุจูุช');
          alert('โ ุชู ุชุซุจูุช ุงูุชุทุจูู ุจูุฌุงุญ!');
          setDeferredPrompt(null);
          setIsInstallable(false);
          return;
        } else {
          console.log('PWA: ุชู ุฑูุถ ุงูุชุซุจูุช');
        }
      } catch (error) {
        console.log('PWA: ูุดู ุงูุชุซุจูุช ุงูุชููุงุฆู:', error);
      }
    } else {
      console.log('PWA: ูุง ููุฌุฏ deferred prompt ูุชุงุญ');
    }
    
    // ุฅุฐุง ูู ููุฌุญ ุงูุชุซุจูุช ุงูุชููุงุฆูุ ุฃุธูุฑ ุงูุชุนูููุงุช ุงููุจุณุทุฉ
    showSimpleInstructions();
  };

  const showSimpleInstructions = () => {
    const userAgent = navigator.userAgent;
    const isAndroid = /Android/i.test(userAgent);
    const isIOS = /iPad|iPhone|iPod/i.test(userAgent);
    const isChrome = /Chrome/i.test(userAgent);
    const isSafari = /Safari/i.test(userAgent) && !isChrome;
    
    let message = '';
    
    if (isIOS && isSafari) {
      message = `๐ฑ ุชุซุจูุช LaaBoBo ุนูู iPhone/iPad:

๐น ุงูุทุฑููุฉ ุงูุณููุฉ:
1. ุงุถุบุท ุฒุฑ ุงููุดุงุฑูุฉ โฌ๏ธ (ุฃุณูู ุงูุดุงุดุฉ)
2. ูุฑุฑ ูุฃุณูู ูุงุฎุชุฑ "ุฅุถุงูุฉ ุฅูู ุงูุดุงุดุฉ ุงูุฑุฆูุณูุฉ"
3. ุงุถุบุท "ุฅุถุงูุฉ"

โ ุณูุตุจุญ LaaBoBo ุชุทุจููุงู ูููุตูุงู ุนูู ูุงุชูู!`;
    } else if (isAndroid && isChrome) {
      message = `๐ฑ ุชุซุจูุช LaaBoBo ุนูู Android:

๐น ุงูุทุฑููุฉ ุงููุจุงุดุฑุฉ:
1. ุงุถุบุท ุงูููุงุท ุงูุซูุงุซ โฎ (ุฃุนูู ูููู ุงููุชุตูุญ)
2. ุงุจุญุซ ุนู "ุชุซุจูุช ุงูุชุทุจูู" ุฃู "ุฅุถุงูุฉ ุฅูู ุงูุดุงุดุฉ ุงูุฑุฆูุณูุฉ"
3. ุงุถุบุท "ุชุซุจูุช"

โ ุณูุธูุฑ LaaBoBo ูุชุทุจูู ุนุงุฏู ูู ูุงุชูู!`;
    } else if (isChrome) {
      message = `๐ป ุชุซุจูุช LaaBoBo ุนูู ุงูููุจููุชุฑ:

๐น ุงูุทุฑููุฉ ุงูุฃููู:
โข ุงุจุญุซ ุนู ุฃููููุฉ ุงูุชุซุจูุช โฌ๏ธ ูู ุดุฑูุท ุงูุนููุงู (ูููู ุงูุฑุงุจุท)
โข ุงุถุบุท ุนูููุง ูุงุฎุชุฑ "ุชุซุจูุช"

๐น ุงูุทุฑููุฉ ุงูุซุงููุฉ:
โข ุงุถุบุท ุงููุงุฆูุฉ โฎ โ "ุชุซุจูุช LaaBoBo"

โ ุณูุตุจุญ LaaBoBo ุจุฑูุงูุฌุงู ูููุตูุงู ุนูู ุงูููุจููุชุฑ!`;
    } else {
      message = `๐ ููุญุตูู ุนูู ุชุฌุฑุจุฉ ุชุซุจูุช ูุซุงููุฉ:

ุงูุณุฎ ูุฐุง ุงูุฑุงุจุท ูุงูุชุญู ูู ูุชุตูุญ Chrome:
${window.location.href}

ุซู ุงุถุบุท ุฒุฑ "ุชุซุจูุช ูุจุงุดุฑ" ูุฑุฉ ุฃุฎุฑู`;
    }
    
    alert(message);
  };

  // ุฃุธูุฑ ุงูุฒุฑ ุฏุงุฆูุงู ููุฃุฌูุฒุฉ ุงููุฏุนููุฉ
  if (window.matchMedia('(display-mode: standalone)').matches) {
    return null; // ุงูุชุทุจูู ูุซุจุช ูุณุจูุงู
  }

  return (
    <button
      onClick={handleInstallClick}
      className="relative flex items-center gap-2 px-4 py-3 bg-white/20 hover:bg-white/30 backdrop-blur-sm text-white rounded-xl transition-all duration-200 border border-white/30 hover:border-white/50 shadow-xl hover:shadow-2xl transform hover:scale-105 active:scale-95"
      title={isInstallable ? "ุชุซุจูุช ุงูุชุทุจูู ูุฌุงูุงู" : "ุชุนูููุงุช ุงูุชุซุจูุช"}
    >
      <Download className="w-6 h-6" />
      <div className="text-right">
        <div className="text-sm font-bold leading-tight">ุชุซุจูุช ูุจุงุดุฑ</div>
        <div className="text-xs opacity-90 leading-tight">ุถุบุทุฉ ูุงุญุฏุฉ</div>
      </div>
      {isInstallable && (
        <div className="absolute -top-1 -right-1 w-4 h-4 bg-green-400 rounded-full animate-bounce flex items-center justify-center">
          <div className="w-2 h-2 bg-white rounded-full"></div>
        </div>
      )}
    </button>
  );
}