تمام يا عمري، إليك الآن كل ما يحتاجه مطوّر Replit من البداية للنهاية لتنفيذ لعبتك الواقعية "استعادة المدينة"، بالتقنيات، الأدوات، والمجلدات المطلوبة، بشكل احترافي، منظم، ودقيق، كأنك سلّمت له دليل تنفيذي كامل:


---

✅ اسم اللعبة:

استعادة المدينة – Reclaim the City
وصف مختصر: لعبة استراتيجية واقعية يتحالف فيها اللاعبون لتحرير المدينة من سيطرة الذكاء الاصطناعي وجيش الروبوتات والمتحولين.


---

🔧 الأدوات والتقنيات المطلوبة داخل Replit:

1. 🧠 محرك اللعبة:

> لإنشاء الرسوم الواقعية والتفاعل:



Phaser.js – محرك 2D احترافي يدعم الخرائط، الأسلحة، الحركة، والفيزياء.


📦 تثبيته في Replit:

npm install phaser

📘 مرجع رسمي:
https://phaser.io/tutorials/getting-started-phaser3


---

2. ⚙️ إدارة الواجهة (UI):

> لبناء شاشات اللعبة (القائمة – اختيار المحارب – النتائج – الإعدادات):



React.js – لتصميم الواجهات.

Tailwind CSS – لتنسيق دقيق وسريع.

Shadcn UI – جاهز لتصميم بطاقات، أزرار، نماذج، إلخ.


📦 تثبيت:

npm install react react-dom tailwindcss


---

3. 🌐 اللعب الجماعي (غرف وتحالفات):

> لبناء نظام الغرف والدعوات والدردشة:



Socket.io – للتواصل بين اللاعبين.

دعم فوري لإنشاء:

غرف تحالف

إرسال دعوات

نظام تفاعلي مباشر داخل القتال



📦 تثبيت:

npm install socket.io socket.io-client


---

4. 🗂️ قاعدة البيانات (Player Progress, Health, Scores...):

Replit DB – بسيطة وسريعة داخل Replit.

تستخدم لتخزين:

تقدم اللاعب (مستوى، قوة)

معلومات التحالف

ترتيب اللاعبين العالمي



📘 توثيق:
https://docs.replit.com/programming-ide/database


---

5. 🔊 نظام الصوتيات:

Howler.js – مكتبة صوت عالية الأداء.

تستخدم لتشغيل:

صوت إطلاق نار

موسيقى المدينة بعد التحرير

أصوات هجوم الروبوتات



📦 تثبيت:

npm install howler


---

🧱 هيكل المجلد الكامل (Project Structure):

📁 reclaim-the-city/
│
├── 📁 public/
│   └── index.html ← صفحة HTML الرئيسية
│
├── 📁 src/
│   ├── 📁 assets/ ← صور، أصوات، رموز
│   ├── 📁 components/ ← مكونات React (اختيار محارب، نتائج، خريطة)
│   ├── 📁 game/ ← ملفات Phaser للعبة الأساسية
│   ├── 📁 hooks/ ← إدارة الحالة مثل useGameState
│   └── App.tsx ← التطبيق الرئيسي
│
├── 📁 server/
│   ├── index.js ← Socket.io سيرفر
│   └── rooms.js ← إدارة الغرف
│
├── 📁 database/
│   └── db.js ← ملف إدارة Replit DB
│
├── tailwind.config.js
├── replit.nix ← إعداد Replit
├── package.json
└── README.md


---

🧪 مثال على خصائص اللعبة:

العنصر	الوصف

القصة	مدينة سقطت تحت سيطرة الذكاء الاصطناعي، والتحالفات البشرية تحاول تحريرها.
المحاربون	جندي - مهندس - طبيب - كشاف
الموارد	طاقة – صحة – سلاح – أدوات
الغرف	غرف مغلقة أو عامة للعب الجماعي
المهمات اليومية	استعادة مناطق جديدة – القضاء على روبوت قائد – حماية المدنيين
الدردشة الصوتية	مستقبلًا – بين أعضاء الفريق فقط
المكافآت	نقاط – أسلحة – تحسينات مظهر



---

🎨 صور وتصميمات:

يجب على المطور استلام الصور التالية:

صورة المقدمة (Main Cover)

شاشة "اختيار المحارب"

شاشة "مهمة استعادة المدينة"

واجهة النتائج والمكافآت


> الصور موجودة جاهزة وأنت سترسلها له من ملفاتك.




---

✅ خطوات العمل للمطور داخل Replit:

1. أنشئ مشروع جديد على Replit.


2. أضف React + Tailwind + Phaser + Socket.io.


3. انسخ هيكل المجلد أعلاه.


4. ابدأ من صفحة App.tsx:

حمّل شاشة اختيار المحارب.

بعدها شاشة المهمة.

عند بدء المهمة، فعّل ملف اللعبة Phaser داخل /game/.



5. اربط قاعدة البيانات لحفظ تقدم اللاعب.



