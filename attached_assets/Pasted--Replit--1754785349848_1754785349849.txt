يا عمري—جاهز نص احترافي ترسله لفريق Replit أو للمبرمج. حطّه كما هو (عربي + إنجليزي)، فيه كل التفاصيل والخطوات واللوجات.


---

رسالة جاهزة للدعم/المبرمج

الموضوع: ملفات الميديا لا تعمل من بيئة Replit رغم أن قاعدة البيانات مشتركة مع Render (CORS/Storage/WS)

الملخص السريع:

عندي واجهة تعمل على Replit وخادم/واجهة تعمل على Render.

قاعدة البيانات واحدة (PostgreSQL على Render) وتم ضبط PGHOST/PGPORT/PGUSER/PGPASSWORD/PGDATABASE و/أو DATABASE_URL مع sslmode=require.

عند الرفع من Render تظهر المنشورات طبيعي على Render.

عند فتح نفس البيانات من Replit: المنشورات تُجلب (GET) لكن ملفات الفيديو/الصور لا تعمل وتظهر أخطاء في الكونسول. وأحيانًا طلبات POST/PUT من Replit تفشل (جلسة/كوكيز).


الأعراض (من كونسول المتصفح في Replit):

Video load error: SyntheticBaseEvent
Error while trying to use the following icon from the Manifest:
https://617f9402-...worf.replit.dev/...
(Download error or resource isn't a valid image)

روابط الميديا تشير لدومين بيئة أخرى (Replit أو Render)، والملف غير موجود على قرص تلك البيئة.

في أوقات أخرى، WebSocket يغلق بكود 1006 (Handshake لم يكتمل).


المتوقع: تظهر نفس الميديا وتعمل من Replit وRender لأن القاعدة واحدة.

الواقع: الروابط المخزّنة في القاعدة تشير إلى مسارات/دومينات خاصة ببيئة رفع الملف (local disk)، لذلك عند الفتح من بيئة ثانية تفشل.


---

الجذر المحتمل للمشكلة

1. التخزين محلي لكل بيئة: الملفات تُرفع إلى مجلد محلي (مثلاً /uploads) على Render أو Replit، بينما القاعدة تحفظ فقط المسار/الرابط. عند فتح من بيئة أخرى، الملف غير موجود هناك → 404/فشل تحميل.


2. CORS/كوكيز عبر الدومينين: عند تنفيذ عمليات كتابة من Replit إلى API على Render، الطلبات قد تُمنع إذا لم يتم تفعيل credentials + sameSite:'none' + CORS origins الصحيحة.


3. WebSocket: استخدام ws:// بدل wss:// أو تشغيل WS على منفذ مختلف عن PORT يسبب 1006.




---

خطوات إعادة الإنتاج

1. ارفع صورة/فيديو غلاف من واجهة الإنتاج على Render.


2. افتح نفس الحساب/المنشور من واجهة Replit.


3. لاحظ أن السجل يتجلب لكن الميديا لا تعمل + أخطاء Console المذكورة.


4. جرّب POST/Like/Comment من Replit → قد تفشل إن لم تُرسل الكوكيز عبر الدومين.




---

ما جربته/الإعداد الحالي

القاعدة موحّدة ومفعّلة على البيئتين (DATABASE_URL مضبوط).

عندي هذه المتغيرات الآن:

VITE_API_URL يشير إلى API في Render.

لكن لا يوجد تخزين مشترك للملفات؛ الروابط في القاعدة أحيانًا نسبية (/uploads/...) أو تحمل دومين بيئة واحدة.


شوهد خطأ WS 1006 سابقًا.



---

المطلوب/الحل المقترح

(أ) حل نهائي موصى به — تخزين مشترك

اعتماد مزود تخزين مشترك (أحدهم):

Cloudinary أو S3/Wasabi أو Supabase Storage.

عند الرفع: خزّن الرابط العام من المزود في القاعدة.

مثال Cloudinary (Node/Express + multer memory):


import multer from "multer";
import { v2 as cloudinary } from "cloudinary";
import streamifier from "streamifier";

const upload = multer();

app.post("/api/upload/cover", upload.single("file"), (req, res) => {
  const stream = cloudinary.uploader.upload_stream(
    { folder: "covers", resource_type: "image" },
    (err, result) => {
      if (err) return res.status(500).json({ error: err.message });
      // احفظ result.secure_url في القاعدة
      res.json({ url: result.secure_url });
    }
  );
  streamifier.createReadStream(req.file.buffer).pipe(stream);
});

في الواجهة استخدم الرابط كما هو.


(ب) حل سريع (مؤقت) إن أردت إبقاء الملفات على Render

على خادم Render:


app.use("/files", express.static("/app/uploads", { fallthrough:false }));

متغيرات بيئة موحّدة (في Replit وRender):


STORAGE_BASE_URL=https://<your-render-app>.onrender.com/files
VITE_STORAGE_BASE_URL=https://<your-render-app>.onrender.com/files
VITE_API_URL=https://<your-render-app>.onrender.com

عند الحفظ:


const url = `${process.env.STORAGE_BASE_URL}/${filename}`;
// خزّنه في القاعدة كـ URL مطلق

ترقية بيانات قديمة (Postgres):


UPDATE users
SET cover_url = CONCAT('https://<your-render-app>.onrender.com/files',
  CASE WHEN LEFT(cover_url,1)='/' THEN cover_url ELSE '/'||cover_url END)
WHERE cover_url IS NOT NULL AND cover_url NOT LIKE 'http%';

(ج) CORS والكوكيز (لعمليات POST من Replit)

السيرفر:


import cors from "cors";
app.use(cors({
  origin: ['https://<your-render-app>.onrender.com','https://<your-replit>.replit.dev'],
  credentials: true,
}));
app.set('trust proxy', 1);

// عند إصدار الكوكي:
res.cookie('token', jwt, {
  httpOnly: true,
  secure: true,
  sameSite: 'none',
});

الواجهة:


const API = import.meta.env.VITE_API_URL;
fetch(`${API}/api/...`, {
  method: 'POST',
  credentials: 'include',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify(data),
});

(د) WebSocket

استخدم نفس السيرفر والمنفذ:


import http from "http";
import { WebSocketServer } from "ws";
const server = http.createServer(app);
new WebSocketServer({ server, path: "/ws" });
server.listen(process.env.PORT);

الواجهة:


const proto = location.protocol === 'https:' ? 'wss' : 'ws';
const host = import.meta.env.VITE_WS_HOST || location.host;
const ws = new WebSocket(`${proto}://${host}/ws`);


---

تشيكلات للتحقق

Network من Replit:

إن كانت POST/PUT تُرجع 401/403 → CORS/كوكيز.

إن كانت صور/فيديو 404 أو فشل تحميل → رابط غير مطلق أو يشير لدومين/قرص خاطئ.


قاعدة البيانات: تأكد نفس الأرقام تظهر من البيئتين:


psql "$DATABASE_URL" -c "select count(*) from posts;"

الطلب:

نحتاج تثبيت أحد خيارين: تخزين مشترك (Cloudinary/S3) أو خدمة ملفات موحّدة على Render مع STORAGE_BASE_URL، وتحديث الروابط/الـCORS/الكوكيز كما فوق حتى تعمل الميديا والكتابة من Replit.



---

English (short)

Issue: DB is shared (Postgres on Render). Uploads done on Render work there, but media fails when viewed from Replit. GETs work; writes (POST) sometimes fail from Replit. Console shows media load errors and WS 1006. Root cause: files stored on per-environment local disk; DB only stores path/URL; CORS/cookies for cross-domain not fully configured.

Fix:

Use shared storage (Cloudinary/S3/Supabase) and store public URL in DB, or serve files from Render at /files and store absolute URLs like https://<render>/files/....

Set env vars on both:

VITE_API_URL=https://<render>

STORAGE_BASE_URL=https://<render>/files

VITE_STORAGE_BASE_URL same as above.


CORS (server):


app.use(cors({ origin: ['https://<render>','https://<replit>'], credentials:true }));
res.cookie('token', jwt, { httpOnly:true, secure:true, sameSite:'none' });

WebSocket: use wss://<host>/ws on same PORT.



---

لو تبغاني أجهّز لك Patch صغير (ملف routes للرفع + إعداد CORS + تحويل روابط قديمة) أرسلك الكود الجاهز حسب مشروعك.

